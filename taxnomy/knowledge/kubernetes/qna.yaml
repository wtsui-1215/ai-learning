version: 3
domain: Kubernetes Kubectl v1.30 Commands
created_by: wtsui-1215, ssugita
document_outline: |
  Kubectl v1.30 commands, Basic Kubernetes commands, Manage workload, Inspect, Create, Edit, Delete Pods, App Management, Cluster Management
seed_examples:
  - context: |
      ## configmap
      Create a new config map named my-config based on folder bar kubectl create configmap my-config --from-file=path/to/bar
      Create a new config map named my-config with specified keys instead of file basenames on disk kubectl create configmap my-config --from-file=key1=/path/to/bar/file1.txt --from-file=key2=/ path/to/bar/file2.txt
      Create a new config map named my-config with key1=config1 and key2=config2
      kubectl create configmap my-config --from-literal=key1=config1 --from-literal=key2=config2
      Create a new config map named my-config from the key=value pairs in the file kubectl create configmap my-config --from-file=path/to/bar
      Create a new config map named my-config from an env file kubectl create configmap my-config --from-env-file=path/to/bar.env
      Create a config map based on a file, directory, or specified literal value.
      A single config map may package one or more key/value pairs.
      When creating a config map based on a file, the key will default to the basename of the file, and the value will default to the file content. If the basename is an invalid key, you may specify an alternate key.
      When creating a config map based on a directory, each file whose basename is a valid key in the directory will be packaged into the config map. Any directory entries except regular files are ignored (e.g. subdirectories, symlinks, devices, pipes, etc).
      ## Usage
      $ kubectl create configmap NAME [--from-file=[key=]source] [--from-literal=key1=value1] [-dry-run=server|client|none]
    questions_and_answers:
      - question: |
          How to create a config map?
        answer: |
          A config map can be created based on a file, directory, or specified literal value.
          In general, you can create a config map via the command `kubectl create configmap NAME [--from-file=[key=]source] [--from-literal=key1=value1] [-dry-run=server|client|none]`.
          To create a config map based on folder bar, use the command `kubectl create configmap my-config --from-file=path/to/bar`.
          To create a new config map with specified keys, specify the keys. e.g. `kubectl create configmap my-config --from-file=key1=/path/to/bar/file1.txt --from-file=key2=/
path/to/bar/file2.txt`
          To create a config map from literal values, specify the key and value pairs. `kubectl create configmap my-config --from-literal=key1=config1 --from-literal=key2=config2`
      - question: |
          What happened if the config map is created based on a directory?
        answer: |
         Each file whose basename is a valid key in the directory will be packaged into the config map.
         Any directory entries except regular files are ignored (e.g. subdirectories, symlinks, devices, pipes, etc).
      - question: |
          What happened if the config map is created based on a file?
        answer: |
          When creating a config map based on a file, the key will default to the basename of the file, and the value will default to the file content. If the basename is an invalid key, you may specify an alternate key.